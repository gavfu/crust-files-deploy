(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[165],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):a(a({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=l(n),d=o,h=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(h,a(a({ref:t},s),{},{components:n})):r.createElement(h,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"===typeof e?e:o,a[1]=u;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},36442:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var r=n(159),o=n(10219),i=(n(67294),n(3905)),a=["components"],u={};function c(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",null,"Developer Guide"),(0,i.kt)("h2",null,"Build on Crust"),(0,i.kt)("p",null,"Please refer to this page: ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.crust.network/docs/en/buildGettingStarted"},"https://wiki.crust.network/docs/en/buildGettingStarted")),(0,i.kt)("h2",null,"IPFS Web3-Auth Gateway"),(0,i.kt)("p",null,"IPFS W3Auth Gateway is a lightweight Web3-based authentication service based on IPFS gateway and reverse proxy.  "),(0,i.kt)("p",null,"For detailed information, Please refer to this link : ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.crust.network/docs/en/buildIPFSWeb3AuthGW"},"https://wiki.crust.network/docs/en/buildIPFSWeb3AuthGW")),(0,i.kt)("h2",null,"IPFS Web3-Auth Crust Pinner"),(0,i.kt)("p",null,"IPFS W3Auth Pinning Service is a lightweight Web3-based authentication service based on IPFS remote pinning service and Crust Network.  "),(0,i.kt)("p",null,"For detailed information, Please refer to this link : ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.crust.network/docs/en/buildIPFSW3AuthPin"},"https://wiki.crust.network/docs/en/buildIPFSW3AuthPin")))}c.isMDXComponent=!0},91230:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/CrustFiles_DeveloperGuide",function(){return n(36442)}])},159:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})}},function(e){e.O(0,[774,888,179],(function(){return t=91230,e(e.s=t);var t}));var t=e.O();_N_E=t}]);